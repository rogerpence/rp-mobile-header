#!/usr/bin/env bash

# function dev() {
#     if [ -e dev ]
#     then
#         ./dev "$@"
#     else
#         echo "There isn't a 'dev' file here."
#     fi
# }



# Use export IMAGE=[image name] before calling this script. 
# It defaults to naming the image tailwindcss:rp

if [ -z "$IMAGE" ]
then
    IMAGE=tailwindcss:rp
fi 

echo Using image name: $IMAGE

if [ $# -gt 0 ]; then

    if [ "$1" == "build" ]; then
        shift 1
        docker build -t $IMAGE -f ./Dockerfile .

    elif [ "$1" == "bash" ]; then
        shift 1
        docker run -it --rm -w /opt -v $PWD/project:/opt $IMAGE bash 

    elif [ "$1" == "tw-version" ]; then
        shift 1
        docker run -it --rm -w /opt -v $PWD/project:/opt $IMAGE npx tailwind --version

    elif [ "$1" == "tw-update" ]; then
        shift 1
        docker run -it --rm -w /opt -v $PWD/project:/opt $IMAGE npm install tailwind --save-dev

    elif [ "$1" == "tw-compile" ]; then
        shift 1
        docker run -it --rm -w /opt -v $PWD/project:/opt $IMAGE ./app/build-tw.sh
    fi

else
    echo "--------------"
    echo "dev shortcuts:"
    echo "--------------"
    echo "dev build            Build tailwindcss:rp image"
    echo "dev bash             Run Bash in container"
    echo "dev tw-version       Show Tailwind version"
    echo "dev tw-update        Update Tailwind"
    echo "dev tw-compile       Compile Tailwind"
fi
